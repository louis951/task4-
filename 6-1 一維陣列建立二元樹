#include <iostream>
using namespace std;
class BinTree {
private:
	int arr[100];
	int tail;
public:
	BinTree() {
		tail = 0;
		for (int i = 0; i < 100; i++)
			arr[i] = 0;
	}
	void BuildTree(int data[], int n) {
		for (int i = 0; i < n; i++) {
			int node = 1;
			while (true) {
				if (arr[node] == 0) {
					arr[node] = data[i];
					break;
				}
				else if (arr[node] > data[i])
					node = node * 2;
				else if (arr[node] < data[i])
					node = node * 2 + 1;
			}
			if (node > tail)
				tail = node;
		}
	}
	void Print() {
		for (int i = 1; i <= tail; i++)
			cout << arr[i] << " ";
	}
};
int main(int argc, char *argv[]){
	BinTree tree1;
	int n;
	cin >> n;
	int *data = new int[n];
	for (int i = 0; i < n; i++) cin >> data[i];
	tree1.BuildTree(data, n);
	tree1.Print();
}
