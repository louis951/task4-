#include <iostream>
using namespace std;
class MaxHeap {
public:
	int arr[100]; 
	int tail;
	MaxHeap() {
		for (int i = 0; i < 100; i++)
			arr[i] = 0;
		tail = 1;
	}
	void swap(int &a, int &b) {
		int c = a;
		a = b;
		b = c;
	}
	void Insert(int x) {
		if (arr[1] == 0) {
			arr[1] = x;
			tail++;
		}
		else {
			arr[tail] = x;
			int a = 0;
			for (int i = tail; i != 0; i /= 2) {
				if (i / 2 != 0 && arr[i] > arr[i / 2]) {
					swap(arr[i], arr[i / 2]);
				}
			}
			tail++;
		}
	}
	int Delete() {
		int x = arr[1];
		arr[1] = arr[--tail];
		arr[tail] = 0;
		for (int i = 1; i < tail;) {
			if (arr[i] < arr[i * 2] && arr[i * 2 + 1] < arr[i * 2]) {
				swap(arr[i], arr[i * 2]);
				i = i * 2;
			}
			else if (arr[i] < arr[i * 2 + 1] && arr[i * 2] < arr[i * 2 + 1]) {
				swap(arr[i], arr[i * 2 + 1]);
				i = i * 2 + 1;
			}
			else
				break;
		}
	}
	void Print() {
		for (int i = 1; i < tail; i++)
			cout << arr[i] << " ";
	}
};
int main(int argc, char *argv[])
{
	MaxHeap tree1;
	int times, input;
	for (cin >> times; times > 0; times--) { cin >> input; tree1.Insert(input); }
	for (cin >> times; times > 0; times--) { tree1.Delete(); }
	tree1.Print();
}
